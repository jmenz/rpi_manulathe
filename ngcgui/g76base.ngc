(info: G76 Threading, Specify driveline and offset, use NEGATIVE offset I for External Thread)

; default values:
; external thread example: xi=0.5,k=0.05,i=-0.03
;                          for majordiam=0.94,minordiam=0.84,i=-0.03

; internal thread example: xi=0.39,k=0.05,i=+0.03
;                          for majordiam=0.94,minordiam=0.84,i=+0.03

o<g76base> sub
          #<rpm> =  #1 (= 200  Spindle RPM)

           #<xi> =  #2 (=  10 X: Xi driveline)
           #<zi> =  #3 (= 0 Z: Zi driveline)

; G76 required items:
            #<z> =  #4 (= -10.0   Z: Zf final)
            #<p> =  #5 (=  1 P: Pitch, NEG for tpi)
            #<i> =  #6 (= -0.5  I: Thread peak offset)
            #<k> =  #7 (=  1  K: Full thread depth)
            #<j> =  #8 (=  0.3 J: Initial cut depth)

; G76 optional items:
            #<r> = #9 (=  1.0   R: Depth degression)
            #<q> = #10 (= 29.5   Q: Compound slide angle)
            #<h> = #11 (=  2     H: No. of spring passes)
;            #<e> = #12 (=  0.050 E: Taper dist =K typ)
;            #<l> = #13 (=  2     L: End Taper 0,1,2,3)

; other:
      #<spindir> = #12 (=3 Dir: Right=4 Left=3)
         #<mode> = #13 (=7 G7/G8 Radius=8 Diam=7)
      #<verbose> = #14 (=0 0:silent, 1:verbose)

#<e> = 0.050
#<l> = 2

o<if00> if [#<p> LT 0]
          #<p> = ABS[25.4 / #<p>]
          (debug, g76base: Computed pitch = #<p> from tpi)
o<if00> endif

o<if10> if [ [#<l> NE 0] AND [#<l> NE 1] AND [#<l> NE 2] AND [#<l> NE 3] ]
          (print,       q76base: Require: L = 0 or 1 or 2 or 3 - EXITING)
          (debug,       q76base: Require: L = 0 or 1 or 2 or 3 - EXITING)
          (AXIS,notify, q76base: Require: L = 0 or 1 or 2 or 3 - EXITING)
          m2
o<if10> endif

o<if11> if [ [#<spindir> NE 3] AND [#<spindir> NE 4]]
          (print,       q76base: Dir: 3 for RH 4 for LH - EXITING)
          (debug,       q76base: Dir: 3 for RH 4 for LH - EXITING)
          (AXIS,notify, q76base: Dir: 3 for RH 4 for LH - EXITING)
          m2
o<if11> endif

o<if12> if [ [#<mode> NE 7] AND [#<mode> NE 8] ]
          (print,       q76base: Mode: 7 for D 8 for R - EXITING)
          (debug,       q76base: Mode: 7 for D 8 for R - EXITING)
          (AXIS,notify, q76base: Mode: 7 for D 8 for R - EXITING)
          m2
o<if12> endif

o<if20> if [#<_vmajor> lT 2.6]
          ; no introspection on lathe radius/diameter mode
          ; so allow only G8 (radius mode)
o<if21>   if [#<mode> NE 8]
            (print,       g76base: v2.5 requires G8 - EXITING)
            (debug,       g76base: v2.5 requires G8 - EXITING)
            (AXIS,notify, g76base: v2.5 requires G8 - EXITING)
            m2
o<if21>   endif
o<if20> else
          ; >= 2.6
          ; use introspection on lathe radius/diameter mode
          ; to restore mode
o<if22>   if [#<_lathe_diameter_mode> EQ 1]
            #<restore_mode> = 7 ; diam
o<if22>   endif
o<if23>   if [#<_lathe_radius_mode> EQ 1]
            #<restore_mode> = 8 ; radius
o<if23>   endif
o<if24>   if [ [#<_lathe_diameter_mode> EQ 0] AND [ #<_lathe_radius_mode> EQ 0] ]
            ; not supposed to happen:
            (print,       g76base: unexpected lathe mode - EXITING)
            (debug,       g76base: unexpected lathe mode - EXITING)
            (AXIS,notify, g76base: unexpected lathe mode - EXITING)
            m2
o<if24>   endif
o<if25>   if [ [#<_lathe_diameter_mode> EQ 1] AND [ #<_lathe_radius_mode> EQ 1] ]
            ; not supposed to happen:
            (print,       g76base: unexpected lathe mode - EXITING)
            (debug,       g76base: unexpected lathe mode - EXITING)
            (AXIS,notify, g76base: unexpected lathe mode - EXITING)
            m2
o<if25>   endif
o<if20> endif

G43

G#<mode>

o<if60>  if [#<verbose> GT 0]
o<if70>    if [#<mode> EQ 7]
             (debug, g76base: set G7 DIAMETER mode)
o<if70>    else
             (debug, g76base: set G8 RADIUS mode)
o<if70>    endif
o<if60>  endif

M#<spindir> S#<rpm>

G0 X#<xi> Z#<zi>

G76 P#<p> Z#<z> I#<i> J#<j> R#<r> K#<k> Q#<q> H#<h> E#<e> L#<l>

o<if80>  if [[#<_vmajor> GE 2.6] AND [#<verbose> GT 0]]
           (debug, g76base restoring mode to G #<restore_mode>)
o<if80>  endif

o<g76base> endsub
